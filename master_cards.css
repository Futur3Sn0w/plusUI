@import url('css/cards/clockCard.css');
@import url('css/cards/wallCard.css');
@import url('css/cards/emojiLocaleCard.css');
@import url('css/cards/snowDbgCard.css');
@import url('css/cards/siriDbgCard.css');
@import url('css/cards/shortcutCard.css');
@import url('css/cards/batteryCard.css');
@import url('css/cards/weatherCard.css');
@import url('css/cards/calendarCard.css');

:root {
    --glow-l: linear-gradient(90deg, transparent, white 80%);
    --glow-d: linear-gradient(90deg, transparent, black 80%);
}

.shelf {
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 10;

    width: 100vw;
    max-width: 100%;
    height: fit-content;

    display: flex;
    align-items: center;
    justify-content: start;

    box-sizing: border-box;
    padding: 15px 25px;

    transition: .3s;

    border-radius: 0 20px 0 0;

    /* background-color: white; */
}

.shelf.float {
    width: 100vw !important;
    align-items: flex-end;
    padding: 0;
    margin-bottom: -1px;
    background: linear-gradient(transparent, black);
}

.shelf.float .cards {
    margin: 0 !important;
    margin-bottom: -1px !important;
}

.shelf.float .cards .subCards {
    background-color: transparent;
    backdrop-filter: none !important;
    box-shadow: none !important;
    border: none !important;
}

.shelf.left .spcLeft {
    width: 0;
}

.shelf.center .spcLeft {
    width: 100%;
}

.shelf.right .spcLeft {
    width: 100%;
}

.shelf.left .spcRight {
    width: 100%;
}

.shelf.center .spcRight {
    width: 100%;
}

.shelf.right .spcRight {
    width: 0;
}

.shelf .spacerA {
    position: relative;
    z-index: 1000;
    transition: .3s;
}

.shelfLabel {
    width: max-content;
    height: max-content;

    background-color: white;
    color: black;
    border-radius: 10px;
    padding: 6px 10px;
    box-shadow: 0 6px 9px 0 rgba(0, 0, 0, 0.2);
    opacity: 0;

    font-size: 17px;
    font-family: GST-Med;

    display: flex;
    align-items: center;
    justify-content: center;

    position: absolute;
    top: 50px;

    transition: .2s;
}

.shelfLabel.hidden {
    display: none !important;
}

.cards {
    width: max-content;
    max-width: 100%;
    height: 141px;
    margin: 13px 10px !important;
    z-index: 1;

    flex-shrink: 0;

    transform: translateX(0);
    border-radius: 0 !important;
    background-color: transparent !important;
    box-shadow: none !important;
    backdrop-filter: none !important;
    border: none !important;

    transition: .3s;

    overflow-x: scroll;

    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 15px;

    padding: 10px;
    padding-left: 215px;
    padding-right: 20px;
    box-sizing: border-box;
}

.cards.collapsed {
    width: 200px;

    overflow: hidden;
    margin: 0 0 13px 17px !important;
    /* margin-bottom: 13px !important; */
}

.subCards {
    width: max-content;
    height: 110px;

    display: flex;
    align-items: center;
    gap: 10px;
    flex-shrink: 0;

    position: relative;
    padding-left: 50px;
    padding-right: 10px;
    overflow-x: scroll;
    transform: translateX(-50px);

    background-color: rgba(255, 255, 255, 0.65);
    backdrop-filter: blur(100px) saturate(6);
    box-shadow: 0 3px 11px 0 rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(0, 0, 0, 0);
    border-radius: 18px;

    transition: .3s;
}

.cards.collapsed .subCards {
    width: 200px;
    padding-left: 0;
    height: 140px;
    transform: translateX(-210px);
    border-radius: 28px !important;
}

.cards.darkModeOn::after {
    background-color: rgba(0, 0, 0, 0.65);
    color: white;
    backdrop-filter: blur(50px) saturate(7);

    border: 1px solid rgba(255, 255, 255, 0.1);
}

.shelf.float .cards {
    width: 100vw !important;
    margin: 0;

    border-radius: 0 !important;
    background-color: transparent;
    border: none !important;
    box-shadow: none;
    backdrop-filter: unset;

    max-width: unset !important;
    padding-left: 220px;
}

.cards.collapsed {
    width: 209px;
    height: 141px;

    gap: 20px;

    padding: 0;
    padding-left: 209px;

    margin: 0;

    transform: translateX(-8px);

    border-radius: 31px !important;
}

.cards.collapsed .card {
    opacity: 0;
}

.card {
    height: 90px;
    flex-shrink: 0;

    border-radius: 16px;
    background-color: rgba(255, 255, 255, .6);
    color: black;

    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 6px 9px 0 rgba(0, 0, 0, 0.2);

    position: relative;

    user-select: none;

    transform-style: preserve-3d;
    transform: perspective(1000px);
    transform-origin: center;
    transition: .25s;
    transition-timing-function: ease;
    transition: opacity .2s, transform .2s;
}

.card:not(.parallax):not(.actionable):hover {
    transform: translateY(-7px);
}

.card.darkModeOn {
    background-color: #222222;
    color: white;
}

/* Edit mode specs */

.editMode .card {
    animation-name: jiggleMode;
    animation-duration: .1s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear;

    transform-origin: center center;
}

.editMode .card * {
    pointer-events: none;
}

.editMode .card.disabled {
    filter: blur(5px) grayscale(1);
    animation-name: unset;
    transform: scale(.7) !important;

    display: flex !important;
}

.card.disabled {
    display: none !important;
}

@keyframes jiggleMode {
    from {
        transform: scale(.9) rotate(-3deg);
    }

    to {
        transform: scale(.9) rotate(3deg);
    }
}