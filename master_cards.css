@import url('css/stock_cards/clockCard.css');
@import url('css/stock_cards/emojiLocaleCard.css');
@import url('css/stock_cards/snowDbgCard.css');
@import url('css/stock_cards/siriDbgCard.css');
@import url('css/stock_cards/shortcutCard.css');
@import url('css/stock_cards/batteryCard.css');
@import url('css/stock_cards/weatherCard.css');
@import url('css/stock_cards/calendarCard.css');
@import url('css/stock_cards/textCard.css');
@import url('css/stock_cards/youtubeCard.css');
@import url('css/stock_cards/youtubeBrowseCard.css');
@import url('css/stock_cards/todoCard.css');
@import url('css/stock_cards/winsiderCard.css');

:root {
    --glow-l: linear-gradient(90deg, transparent, white 80%);
    --glow-d: linear-gradient(90deg, transparent, black 80%);
}

.shelf.darkModeOn .shelfLabel {
    background-color: rgba(0, 0, 0, 0.5) !important;
    color: white;
}

body:has(.context-selected-card) .shelfLabel {
    transform: translateX(-50%) scale(.85) !important;
    filter: blur(10px) !important;
    opacity: 0 !important;
}

.shelfLabel {
    background-color: rgba(255, 255, 255, 0.5) !important;
    /* backdrop-filter: blur(10px) saturate(20); */
    color: black;
    border-radius: 100px;

    font-size: 19px;
    font-weight: 500;
    padding: 7px 12px;

    pointer-events: none;

    position: absolute;
    top: -50px;
    transform: scale(.85);
    left: 50%;
    filter: blur(10px);
    opacity: 0;
    z-index: 2;

    transform-origin: center center;

    transition: .2s;
}

.shelf:has(.card:hover) .shelfLabel,
.shelfLabel.show {
    transform: scale(1) !important;
    filter: blur(0) !important;
    opacity: 1 !important;
}

.shelf {
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 10;

    width: 100vw;
    max-width: 100%;
    height: fit-content;

    display: flex;

    box-sizing: border-box;
    padding: 0 15px 15px 15px;

    transition: .3s;

    /* background-color: white; */
}

.shelf.float {
    width: 100vw !important;
    align-items: flex-end;
    /* padding: 0; */
    padding-bottom: 20px;
    margin-bottom: -1px;
    /* background: linear-gradient(transparent, black); */
}

.shelfBack {
    width: 100vw;
    height: 150px;

    opacity: 0;

    transition: .4s;

    backdrop-filter: blur(0) saturate(1);
    display: flex;

    mask-image: linear-gradient(to bottom, transparent, black 50%);

    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 9;
}

body:has(.timeDate.ccOpen .ccb:not(.ccb2).selected) .shelfBack {
    backdrop-filter: blur(40px) saturate(2) brightness(2);
}


body:has(.shelf.float) .shelfBack {
    height: 250px;
    backdrop-filter: blur(40px) saturate(2);
    opacity: 1;
}

.shelfBack::after {
    background-color: var(--section-l);
    opacity: 0;


    content: '';
    width: 100%;
    height: 100%;
    position: absolute;
}

.shelfBack.darkModeOn::after {
    background-color: var(--section-d);
    /* DISPLAY: NONE !important; */
}

.shelf.left .spcLeft {
    width: 0;
}

.shelf.center .spcLeft {
    width: 100%;
}

.shelf.right .spcLeft {
    width: 100%;
}

.shelf.left .spcRight {
    width: 100%;
}

.shelf.center .spcRight {
    width: 100%;
}

.shelf.right .spcRight {
    width: 0;
}

.shelf .spacerA {
    position: relative;
    z-index: 1000;
    transition: width .45s;
    height: 20px;
    /* background: purple; */
}

.subCards {
    width: fit-content;
    max-width: calc(100% - 50px);
    height: 90px;

    display: flex;
    align-items: center;
    gap: 10px;
    flex-shrink: 0;

    position: relative;
    padding: 8px;
    /* padding-left: 0; */
    overflow: hidden;
    margin-right: 0;

    background-color: rgba(255, 255, 255, 0.65);
    backdrop-filter: blur(100px) saturate(6);
    box-shadow: 0 3px 11px 0 rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(0, 0, 0, 0);
    border-radius: 21px !important;

    transition: .2s;
}

.shelf.float .subCards {
    /* width: 100vw !important; */
    margin: 0;
    margin-bottom: -20px;
    padding: 15px;
    padding-bottom: 20px !important;

    /* background-color: orange; */

    border-radius: 0 !important;
    background-color: transparent;
    border: none !important;
    box-shadow: none;
    backdrop-filter: unset;
    overflow-x: scroll;

    gap: 20px;

    /* max-width: unset !important; */
}

.shelf:not(.float) .subCards.right-circle {
    border-top-right-radius: 55px !important;
    border-bottom-right-radius: 55px !important;
}

.shelf:not(.float) .subCards.left-circle {
    border-top-left-radius: 55px !important;
    border-bottom-left-radius: 55px !important;
}

.card {
    height: 90px;
    max-width: 180px;
    flex-shrink: 0;

    border-radius: 16px;
    background-color: rgba(255, 255, 255, .6);
    color: black;

    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 6px 9px 0 rgba(0, 0, 0, 0.2);
    outline: solid 3px transparent;

    position: relative;

    transform-style: preserve-3d;
    transform: perspective(1000px);
    transform-origin: center;
    transition-timing-function: ease;
    transition: .2s;
}

.card.removing {
    overflow: hidden;
    width: 0 !important;
    height: 0 !important;
    filter: blur(20px) !important;
    padding-left: 0 !important;
    padding-right: 0 !important;
    margin-left: -10px !important;
    margin-right: -10px !important;
}

.card.md {
    transition: none !important;
}

.card>* {
    user-select: none !important;
}

.card.parallax {
    transition: opacity .2s, transform 0, outline .15s, width .2s, margin-bottom .2s !important;
}

.card.parallax-disabled {
    transform: none;
}

.card.darkModeOn {
    background-color: #222222;
    color: white;
}

.card.expanded {
    width: 100%;
    height: 100%;
    max-width: unset;
    /* filter: blur(10px) grayscale(.5); */
}

.cardOptions {
    display: none !important;
    opacity: 0;
    pointer-events: none;

    position: absolute;
    z-index: -10;
}

/* Demo cards in Rolodex */

/* Context Menu stuff */

.card.context-selected-card {
    transform: none !important;
    margin-bottom: 10px;
}

.card.context-selected-card::after {
    content: '';
    width: 100%;
    height: 100%;

    outline: solid 3px white;
    border-radius: inherit;

    animation-name: selectedCardBorder;
    animation-duration: 2s;
    animation-iteration-count: infinite;

    position: absolute;
    z-index: 100;
}

@keyframes selectedCardBorder {
    0% {
        opacity: .5;
    }

    50% {
        opacity: 1;
    }

    100% {
        opacity: .5;
    }
}

.contextMenuDiv {
    position: absolute;
    z-index: 20;
    width: 160px;
    height: fit-content;

    opacity: 0;

    background-color: white;
    bottom: 122px;

    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 5px;
    gap: 5px !important;
    pointer-events: none;

    transition: bottom .2s, opacity .2s !important;
}

.contextMenuDiv.show {
    opacity: 1;
    bottom: 135px;
    pointer-events: all;
}

.cmItem {
    width: 100%;
    overflow: hidden;
    position: relative;

    box-sizing: border-box;
    padding: 7px 10px;
    border-radius: 12px;

    background-color: inherit;
    font-size: 13px;

    display: flex;
    align-items: center;
    flex-wrap: nowrap;

    user-select: none;
    cursor: pointer;
}

.cmItem:hover {
    background-color: white !important;
    color: rgba(0, 0, 0, 0.75);
}

.cmItem i {
    width: 18px;
    height: 20px;
    flex-shrink: 0;
    font-size: 14px;

    padding-right: 5px;
    margin-left: -3px;

    display: flex;
    align-items: center;
    justify-content: center;
}

.cmi-resize::after,
.cmi-disableCard::after {
    content: attr(data-btnLabel);
    width: min-content;
    white-space: nowrap;
}

.cmi-disableCard::after {
    padding-left: 3px;
}

.cmSep {
    width: 90%;
    height: 1px;
    margin: 2px 0;

    background-color: inherit;
    filter: invert(1);
    opacity: .25;
}

.cmSep.custom {
    height: fit-content;
    width: 100%;
    background-color: inherit;
    filter: invert(0);
    opacity: 1;

    border-radius: 12px;
}

.cmSep.custom::after {
    content: "";
    width: 90%;
    height: calc(100% + 2px);

    border: 1px solid black;
    opacity: .5;
    border-left-color: transparent;
    border-right-color: transparent;

    position: absolute;
    top: -2px;
    left: 50%;

    transform: translateX(-50%);
}

.cmSep.custom .cmItem {
    background-color: transparent;
}

.contextMenuDiv.darkModeOn .cmSep.custom::after {
    border: 1px solid white;
}

/* Edit mode specs */

.editMode .card {
    animation-name: jiggleMode;
    animation-duration: .1s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear;

    transform-origin: center center;
    transition: 0 !important;
}

.editMode .card * {
    pointer-events: none;
}

.editMode .card.disabled {
    filter: blur(5px) grayscale(1);
    animation-name: unset;
    transform: scale(.7) !important;

    display: flex !important;
}

.card.disabled {
    display: none !important;
}

@keyframes jiggleMode {
    from {
        transform: scale(.9) rotate(-3deg);
    }

    to {
        transform: scale(.9) rotate(3deg);
    }
}