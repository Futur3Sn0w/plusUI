/*  */

.card {
    height: 90px;
    max-width: 180px;
    flex-shrink: 0;

    border-radius: 16px;
    background-color: var(--section-l);
    color: black;

    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.35);
    outline: solid 3px transparent;

    position: relative;

    transform-style: preserve-3d;
    transform: perspective(1000px);
    transform-origin: center;
    transition-timing-function: ease;
    transition: .2s;
}

.card.removing {
    overflow: hidden;
    width: 0 !important;
    height: 0 !important;
    filter: blur(20px) !important;
    padding-left: 0 !important;
    padding-right: 0 !important;
    margin-left: -10px !important;
    margin-right: -10px !important;
}

.plated .card {
    background: var(--section-l);
    background-color: var(--section-l);
    color: black;
}

.plated.darkModeOn .card {
    background: var(--section-d);
    background-color: var(--section-d);
    color: white;
}

.card.md {
    transition: none !important;
}

.card>* {
    user-select: none !important;
}

.card.parallax {
    transition: opacity .2s, transform 0, outline .15s, width .2s, margin-bottom .2s !important;
}

.card.parallax-disabled {
    transform: none;
}

.subCards .card:not(.card.parallax):hover {
    transform: scale(1.075);
}

.card.darkModeOn {
    background-color: var(--section-d);
    color: white;
}

.card.expanded {
    width: 100%;
    height: 100%;
    max-width: unset;
    /* filter: blur(10px) grayscale(.5); */
}

.cardOptions {
    display: none !important;
    opacity: 0;
    pointer-events: none;

    position: absolute;
    z-index: -10;
}

/* Demo cards in Rolodex */

/* Context Menu stuff */

.subCards:has(.card.context-selected-card) .card:not(.card.context-selected-card) {
    filter: grayscale(.5);
    opacity: .5;
}

.card.context-selected-card {
    transform: scale(1.045) !important;
    /* margin-bottom: 10px; */
}

.card.context-selected-card::after {
    content: '';
    width: 100%;
    height: 100%;

    outline: solid 3px white;
    border-radius: inherit;

    animation-name: selectedCardBorder;
    animation-duration: 2s;
    animation-iteration-count: infinite;

    position: absolute;
    z-index: 100;
}

@keyframes selectedCardBorder {
    0% {
        opacity: .4;
    }

    50% {
        opacity: 1;
    }

    100% {
        opacity: .4;
    }
}

.contextMenuDiv {
    position: absolute;
    z-index: 20;
    width: 190px;
    height: fit-content;

    opacity: 0;

    /* background-color: white; */
    bottom: 112px;

    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 5px;
    gap: 2px !important;
    pointer-events: none;

    background-color: transparent !important;
    backdrop-filter: blur(0) saturate(1) !important;
    box-shadow: 0 5px 15px 0 rgba(0, 0, 0, 0) !important;
    border: 1px solid rgba(0, 0, 0, 0) !important;
    border-radius: 0;
    transform: scale(.9);

    transition: bottom .2s, opacity .2s, transform .2s !important;
}

.contextMenuDiv.show {
    opacity: 1;
    bottom: 135px;
    transform: scale(1);
    pointer-events: all;
}

.cmItem {
    width: 100%;
    overflow: hidden;
    position: relative;

    box-sizing: border-box;
    padding: 5px 8px;
    padding-left: 4px;
    border-radius: 12px;
    gap: 5px;

    background-color: inherit;
    font-size: 13px;

    display: flex;
    align-items: center;
    flex-wrap: nowrap;

    user-select: none;
    cursor: pointer;
}

.cmItem:hover {
    background-color: white !important;
    color: rgba(0, 0, 0, 0.75);
}

.cmItem i {
    width: 35px;
    height: 28px;
    flex-shrink: 0;
    font-size: 14px;
    border-radius: 50px;

    background-color: white;
    color: rgba(0, 0, 0, 0.75);

    display: flex;
    align-items: center;
    justify-content: center;
}

.cmi-resize::after,
.cmi-disableCard::after {
    content: attr(data-btnLabel);
    width: min-content;
    white-space: nowrap;
}

.cmi-disableCard::after {
    padding-left: 3px;
}

.cmSep {
    width: 90%;
    height: 1px;
    margin: 2px 0;

    background-color: inherit;
    /* filter: invert(1); */
    opacity: .25;
}

.cmSep.custom {
    display: flex;
    align-items: center;
    justify-content: center;
    height: fit-content;
    width: 100%;
    margin: 10px 0;
    background-color: transparent;
    /* filter: invert(0); */
    opacity: 1;
    position: relative;

    border-radius: 12px;
}

.cmSep.custom .cmItem {
    height: 38px !important;
}

.cmSep.custom::after {
    content: "";
    width: 90%;
    height: 115%;

    border: 1px solid black;
    opacity: .5;
    border-left-color: transparent !important;
    border-right-color: transparent !important;

    position: absolute;
    top: -10%;
    left: 50%;

    transform: translateX(-50%);
}

.cmSep.custom .cmItem {
    z-index: 12;
    position: relative;
}

.contextMenuDiv.darkModeOn .cmSep.custom::after {
    border: 1px solid white;
}

/* Edit mode specs */

.editMode .card {
    animation-name: jiggleMode;
    animation-duration: .1s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear;

    transform-origin: center center;
    transition: 0 !important;
}

.editMode .card * {
    pointer-events: none;
}

.editMode .card.disabled {
    filter: blur(5px) grayscale(1);
    animation-name: unset;
    transform: scale(.7) !important;

    display: flex !important;
}

.card.disabled {
    display: none !important;
}

@keyframes jiggleMode {
    from {
        transform: scale(.9) rotate(-3deg);
    }

    to {
        transform: scale(.9) rotate(3deg);
    }
}