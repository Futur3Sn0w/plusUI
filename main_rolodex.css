.rolodexOpen {
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    box-sizing: border-box;

    height: 46px;
    width: 46px;
    gap: 0;
    flex-shrink: 0;

    position: relative;
    z-index: 1;

    transition: .2s;

    font-size: 20px;

    border-top-left-radius: 50px !important;
    border-bottom-left-radius: 50px !important;
}

.rolodexOpen i {
    transition: .3s;
}

body:has(.rolodex.visible) .rolodexOpen i {
    transform: rotate(135deg);
}

body:has(.rolodex.visible) .rolodexOpen {
    border-radius: 50px;
    pointer-events: all !important;
}

body:has(.timeDate.ccOpen) .rolodexOpen {
    opacity: 0;
    filter: blur(10px);
    width: 0;
    padding: 0;
    margin: 0;
    pointer-events: none;
}

.rolodexOpen:hover {
    margin-right: -2px;
    padding: 0 12px;
    transform: scale(1.075);
    background-color: rgba(255, 255, 255) !important;
    gap: 8px;
    color: rgba(0, 0, 0, .75) !important;
    width: 90px;
}

.rolodexOpen:hover::after {
    opacity: 1;
    max-width: 200px;
    margin-left: 0;
}

.rolodexOpen::after {
    content: attr(label);
    font-size: 14px;
    opacity: .5;
    transition: .2s;

    opacity: 0;
    width: fit-content;
    max-width: 0;
}

body:has(.rolodex.visible) .rolodexOpen::after {
    content: 'Close';
}

.rolodex {
    position: absolute;
    /* top: 60px; */

    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 15px;

    opacity: 0;
    pointer-events: none;
    transition: transform .3s, opacity .3s;

    background-color: transparent !important;
    backdrop-filter: none !important;
    border: none !important;
    box-shadow: none !important;
}

.rolodex.visible {
    z-index: 50;
    opacity: 1;
    pointer-events: unset;
}

.cbSect {
    width: auto;
    max-width: 100%;
    height: 100%;

    mask-image: linear-gradient(to bottom, transparent 1%, black 12% 76%, transparent 82%);

    position: absolute;
    top: 0;

    padding: 20px 80px;
    padding-top: 120px;
    padding-bottom: 185px;
    box-sizing: border-box;

    display: flex;
    gap: 75px 15px;
    flex-wrap: wrap;

    transition: .3s;
    transform: translateY(50px);
    /* grid-template-columns: repeat(auto-fit, minmax(290px, 1fr)); */
    /* grid-auto-rows: auto; */
    justify-content: center;
    align-items: center;

    border-radius: 12px;
    overflow-y: scroll;
}

.rolodex.visible .cbSect {
    gap: 60px 15px;
    transform: translateY(0px);
}

.cbSect .card-container {
    width: 290px;
    height: 138px;
    border-radius: 16px;

    backdrop-filter: none !important;

    /* grid-column-start: 1; */
    /* grid-row-start: 1; */

    transition: .25s;

    display: inline-flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    z-index: 9;
    /* overflow: hidden; */

    box-sizing: border-box;
    padding: 15px;
    padding-top: 63px;
    padding-bottom: 60px;
}

.card-container:hover {
    transform: scale(1.075);
    backdrop-filter: blur(10px) !important;
    z-index: 10;

    height: 179px;
    margin-bottom: -55px;
}

.card-container:has(.card.new)::after {
    content: '';
    width: 10px;
    height: 10px;
    border-radius: 12px;

    background-color: red;

    position: absolute;
    top: 10px;
    left: 10px;
}

.card-container:has(.card.updated)::after {
    content: '';
    width: 10px;
    height: 10px;
    border-radius: 12px;

    background-color: rgb(0, 153, 255);

    position: absolute;
    top: 10px;
    left: 10px;
}

/* body:has(.darkModeOn) .cbSect .card-container {
    background-color: var(--section-d);
} */

.categoryBar::before,
.card-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    z-index: 0;

    width: 100%;
    height: 100%;

    border-radius: inherit;

    opacity: 0;
    transition: .4s;

    background-color: var(--section-l);
    mask-image: linear-gradient(to bottom, transparent, rgba(0, 0, 0, .75));
}

.categoryBar:hover::before,
.card-container:hover::before {
    opacity: 1;
}

body:has(.darkModeOn) .categoryBar:hover::before,
body:has(.darkModeOn) .card-container:hover::before {
    opacity: .2;
}

.cbSect .card-container .cardName {
    font-size: 15px;
    font-weight: 600;
    align-self: flex-start;
    z-index: 9;
    position: relative;
    margin-bottom: -3px;
    margin-left: -2px;
}

.card-container:has(.card.new) .cardName::after {
    content: 'New';
    opacity: .5;
    text-transform: uppercase;
    font-size: 11px;

    position: absolute;
    left: 102%;
}

.card-container:has(.card.updated) .cardName::after {
    content: 'Updated';
    opacity: .5;
    text-transform: uppercase;
    font-size: 11px;

    position: absolute;
    left: 102%;
}

.cbSect .card-container .cardDesc {
    font-size: 11px;
    font-weight: 400;
    opacity: .7;

    min-height: 58px;
    max-height: 58px;
    width: 270px;

    padding: 0 4px;
    margin-top: 10px;
    overflow-y: scroll;

    position: relative;

    box-sizing: border-box;
    /* background-color: var(--surface-button-l); */
    /* border-radius: 9px; */
    z-index: 9;

    transition: .15s;
}

.card-container .cardDesc::after {
    content: attr(options);
}

body:has(.darkModeOn) .cbSect .card-container .cardDesc {
    /* background-color: var(--surface-button-d); */
}

.cardDesc::before {
    content: attr(infochip);

    opacity: 0;
    font-size: 20px;
    font-weight: 600;

    display: flex;
    align-items: center;
    justify-content: center;
    text-shadow: 0 3px 5px #00000066;

    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;

    z-index: 1;
    transition: .15s;
}

.card-container:has(.infoChip[data-avail="y"]:hover) .cardDesc::before {
    opacity: 1;
    color: rgb(95, 213, 26);
}

.card-container:has(.infoChip[data-avail="n"]:hover) .cardDesc::before {
    opacity: 1;
    color: rgb(241, 55, 55);
}

.card-container:has(.infoChip:hover) .cardDesc {
    color: transparent;
}

.cbSect .card-container .card {
    pointer-events: none !important;
    position: absolute;
    top: -40px;
    z-index: 9;
}

.cbSect .card-container .card-options {
    display: none;
}

.infoChips {
    display: flex;
    height: 25px;
    gap: 3px;
    padding-top: 0;
    box-sizing: border-box;
    border-radius: 16px 16px 0 0;

    position: absolute;
    top: 58px;
    right: 8px;
    transition: .2s;
    z-index: 7;

}

.infoChips .infoChip {
    width: 30px;
    height: 100%;
    border-radius: 7px;

    background-color: #eee;
    color: black;

    font-size: 12px;

    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
}

.infoChip:first-of-type {
    border-top-left-radius: 15px;
    border-bottom-left-radius: 15px;
}

.infoChip:last-of-type {
    border-top-right-radius: 15px;
    border-bottom-right-radius: 15px;
}

body:has(.darkModeOn) .infoChips .infoChip {
    background-color: #222;
    color: white;
}

.infoChips .infoChip[data-avail="n"]::before {
    opacity: .35;
}

.infoChips .infoChip[data-avail="y"] {
    opacity: 1;
    background-color: #eee !important;
    color: black !important;
}

.card-container:hover .addBtn {
    opacity: 1;
}

.addBtn {
    background-color: #26a426;
    color: white;

    position: absolute;
    bottom: 3px;
    z-index: 2;

    width: 98%;
    height: 38px;
    border-radius: 13px;
    user-select: none;

    display: flex;
    align-items: center;
    justify-content: center;
    user-select: none;
    gap: 7px;

    opacity: 0;
    font-size: 13px;
    font-weight: 500;
    box-sizing: border-box;
    transition: .2s;
}

.addBtn:hover {
    background-color: white !important;
    color: black !important;
    transform: scale(1.075);
}

.addBtn:active {
    transform: scale(.9);
}

/* Category bar */

.categoryBar {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 5px;

    position: fixed;
    left: 15px;
    z-index: 100;
    width: 40px;

    opacity: 0;
    transform: scale(.8) translateX(-15px);
    filter: blur(10px);

    pointer-events: none;
    overflow: hidden;

    transition: .3s;

    padding: 5px;
    border-radius: 16px;
}

.categoryBar:hover {
    width: 160px;
    overflow: visible;
}

body:has(.rolodex.visible) .categoryBar {
    opacity: 1;
    filter: blur(0px);
    transform: scale(1) translateX(0);

    pointer-events: all;
}

.categoryBar .categoryBtn {
    width: 40px;
    height: 40px;
    border-radius: 16px;
    position: relative;

    transition: .15s;
    padding-left: 40px;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    box-sizing: border-box;
}

.categoryBar:hover .categoryBtn {
    width: 160px;
}

.categoryBar .categoryBtn:hover {
    background-color: white !important;
    color: black !important;
    transform: scale(1.1);
    width: 170px;
}

.categoryBtn.selected i {
    background-color: var(--surface-button-l);
}

body:has(.darkModeOn) .categoryBtn.selected i {
    background-color: var(--surface-button-d);
}

.categoryBtn>* {
    pointer-events: none;
}

/* .categoryBar:has(.categoryBtn:hover) .categoryBtn.selected i {
    background-color: transparent;
} */

.categoryBar .categoryBtn::after {
    content: attr(data-category);

    opacity: 0;
    font-size: 14px;

    transition: .15s;
}

.categoryBar:hover .categoryBtn::after {
    opacity: 1;
}

.categoryBtn i {
    font-size: 16px;
    position: absolute;
    left: 4px;
    z-index: 2;
    pointer-events: none;
    flex-shrink: 0;

    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 500px;

    /* background-color: var(--surface-button-l); */
    /* width: 50%; */
    transition: .125s;
}

.categoryBtn:hover i {
    background-color: var(--surface-button-l) !important;
}

.categoryBar .sep {
    width: 100%;
    height: 1px;
    margin: 5px 0;
    background-color: var(--surface-button-l);
}

body:has(.darkModeOn) .categoryBar .sep {
    background-color: var(--surface-button-d);
}