.controlPanel {
    display: flex;

    position: absolute;
    right: 0;
    top: 60px;
    z-index: 100;

    min-height: 300px;
    min-width: 300px;
    color: inherit;
    opacity: 1;
    gap: 10px 0;

    padding: 10px;

    /* margin-top: 50px; */
    box-sizing: border-box;
    border-top: none !important;
    transition: .4s;

    pointer-events: none;
}

.controlPanel.expanded {
    pointer-events: all;
}

.shelfOpts.collapse {
    height: 0;
    gap: 0;
    padding: 0;

    margin: 2.5px 0;
}

.shelfOpts {
    overflow: hidden;
    margin: 5px 0;
    transition: .3s;
}

.controlPanelOptGroup {
    width: 230px;
    height: fit-content;
    flex-shrink: 0;

    display: flex;
    /* flex-direction: column; */
    align-items: center;
    flex-wrap: wrap;
    justify-content: flex-start;
    gap: 10px;

    box-sizing: border-box;

    position: absolute;
    right: 0;

    color: inherit;
    border-radius: 19px;
    padding: 10px;
    /* padding-top: 35px; */
    margin: 0 10px;

    opacity: 0;
    filter: blur(20px);
    transform: scale(.75);
    transition: .4s;
    transition-timing-function: ease;
    transform-origin: top right;
    pointer-events: none;
}

.controlPanel.expanded .controlPanelOptGroup.visible {
    opacity: 1;
    filter: blur(0);
    transform: scale(1);
    pointer-events: all;
}

/* .controlPanel.darkModeOn .controlPanelOptGroup {
    background-color: var(--section-d);
} */

.controlPanelOptGroup::before {
    content: attr(data-sect);

    top: 10px;
    width: 100%;
    padding: 5px 0;

    text-align: center;

    display: flex;
    align-items: center;
    justify-content: center;

    opacity: .75;
    font-weight: 600;
    font-size: 15px;
}

.controlPanelOptGroup p.tip {
    margin: 0;
    padding: 5px 0;
    font-size: 13px;
    opacity: .5;
    text-align: center;
}

.controlPanelOptGroup .ccSubHead {
    /* padding-left: 1px; */
    /* margin-right: auto; */
    width: 100%;
    text-align: center;

    opacity: .75;
    font-weight: 600;
    font-size: 15px;

    margin-top: 5px;
}

.lightDark {
    width: calc(50% - 5px);
    height: 100px;
    background-color: var(--section-input-l);
    border-radius: 15px;
    cursor: pointer;

    font-size: 50px;
    color: inherit;
    box-sizing: border-box;

    position: relative;

    gap: 7px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;

    padding: 0 10px;
    transition: .125s;
}

.darkModeOn .lightDark {
    background-color: var(--section-input-d);
}

.lightDark:hover {
    background-color: white !important;
    color: rgba(0, 0, 0, 1);
}

.lightDark::after {
    content: attr(data-theme);

    /* margin-left: 3px; */
    margin-bottom: -1px;
    font-weight: 500;
    font-size: 15px;
    opacity: .7;

    text-transform: capitalize;
}

.controlPanel:not(.darkModeOn) .lightDark i {
    transform: rotate(180deg);
}

.lightDark i {
    opacity: .8;

    transition: .15s;
}

.group {
    display: flex;
    flex-direction: column;
    gap: 10px;
    width: calc(50% - 5px);
}

.group>* {
    width: 100% !important;
}

.keyTB {
    width: 100%;
    height: 100%;

    border: none !important;
    outline: none !important;

    background-color: transparent;
    color: inherit;
    font-size: 12px;

    position: relative;
    z-index: 1;
}

.shelfAlign {
    width: 100%;
    height: 45px;

    color: inherit;
    font-size: 12px;
    border-radius: 50px;
    background-color: var(--section-input-l);
    padding: 3px;

    display: flex;
    align-items: center;
    justify-content: center;
    gap: 3px;

    position: relative;
    box-sizing: border-box;
}

.controlPanel.darkModeOn .shelfAlign {
    background-color: var(--section-input-d);
}

.sa-opt {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    user-select: none;
    gap: 5px;

    width: calc(100%);
    height: calc(100%);
    border-radius: 200px;
    overflow: hidden;

    transition: .15s;
}

.sa-opt:hover {
    color: black !important;
    background-color: white;
    box-shadow: 0 5px 8px 0 rgba(0, 0, 0, .25);
}

.sa-opt:active {
    transform: scale(.95);
}

.sa-opt input {
    appearance: none;

    width: 100%;
    height: 100%;
    margin: 0;

    display: flex;
    align-items: center;
    justify-content: center;

    box-sizing: border-box;
}

.sa-opt>label {
    position: absolute;
}

.shelfAlign:has(input:hover) .sa-opt input:checked {
    background-color: transparent;
}

.sa-opt input:checked {
    background-color: var(--surface-button-l);
}

.darkModeOn .sa-opt input:checked {
    background-color: var(--surface-button-d);
}

.dcExpt {
    width: calc(50%);
    height: 45px;
    padding-left: 13px !important;
    font-size: 12px;

    display: flex;
    align-items: center;
    justify-content: flex-start;

    overflow: hidden;

    background-color: var(--section-input-l);
    border-radius: 15px;

    position: relative;
    box-sizing: border-box;

    transition: .125s;
}

.dcExpt:has(input[type="text"]) {
    width: 100%;
}

.group-b {
    width: 100%;
    display: flex;
    justify-content: space-between;
    /* gap: 10px; */
    padding: 0;
}

.liveLinkCont {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.liveLinkCont .dcExpt {
    width: 100%;
}

.liveLinkCont .dcExpt label {
    width: fit-content;
    margin-left: 5px;
    margin-right: auto;
}

.dcExpt.button {
    width: 45px;
    padding-left: 0 !important;
    justify-content: center;
}

.dcExpt.button::after {
    display: none;
}

.dcExpt.button i {
    margin-left: 0;
    font-size: 20px;
    background-color: transparent !important;
}

.dcExpt.button:hover i {
    background-color: transparent !important;
}

.sectLabel {
    width: 100%;

    display: flex;
    align-items: center;
    justify-content: center;

    text-align: center;
    user-select: none;
    opacity: .75;
    font-weight: 600;
    font-size: 15px;
}

.dcExpt:not(.pageScalingGroup):active,
.button:active {
    transform: scale(.97) !important;
}

.ccSep {
    width: 100%;
    height: 1px;
    margin: 0 auto;
    opacity: .5;

    background: var(--section-input-l);
}

.darkModeOn .ccSep {
    background: var(--section-input-d);
}

.keyTB-cont::before {
    content: "";
    width: calc(100% - 2px);
    height: calc(100% - 2px);

    position: absolute;
    top: 0;
    left: 0;

    border-color: rgb(0, 0, 0);
    border-width: 1px;
    border-style: solid;
    mix-blend-mode: overlay;
    opacity: .75;
    border-radius: 1px;

    transition: .1s;
    transform-origin: center;
}

.darkModeOn .keyTB-cont::before {
    border-color: white;
    opacity: .5;
}

.dcExpt:has(input:checked) i {
    color: #0770EE;
}

.darkModeOn .dcExpt:has(input:checked) i {
    color: #079dee;
}

.dcExpt input:not([type="text"]) {
    appearance: none;
    position: absolute;
    left: 0;
    padding: 0;
    margin: 0;

    width: 100%;
    height: 100%;
}

.dcExpt:hover {
    background-color: white !important;
    color: rgba(0, 0, 0, .75);
}

.dcExpt label {
    position: relative;
    z-index: 2;
    pointer-events: none;
    width: 55%;
    margin-left: auto;
    margin-right: 10px;
}

.dcExpt i {
    font-size: 18px;
    position: relative;
    z-index: 2;
    pointer-events: none;
    flex-shrink: 0;

    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 500px;
    margin-left: -5px;

    background-color: var(--surface-button-l);
    /* width: 50%; */
    transition: .125s;
}

.dcExpt:hover i {
    background-color: var(--surface-button-l) !important;
}

.controlPanel.darkModeOn .dcExpt i {
    background-color: var(--surface-button-d);
}

.controlPanel.darkModeOn .controlPanelOptGroup .dcExpt {
    background-color: var(--section-input-d);
}

/* Backdrop */

.backdropCont {
    display: flex;
    flex-direction: column;
    gap: 10px;
    width: 100%;

    transition: .25s;
}

.wallList {
    display: flex;
    gap: 10px;
    overflow-x: scroll;
    /* margin-bottom: auto; */
    padding: 10px;
    margin: -10px;
    margin-bottom: -5px;
}

.prevWall {
    width: 160px;
    height: 90px;
    flex-shrink: 0;

    border-radius: 10px;

    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;

    transition: .125s;
}

.prevWall:active {
    transform: scale(.9);
}

.wallBtns {
    gap: 10px;
    display: flex;
    align-items: center;
    justify-content: center;

    width: 100%;
    height: fit-content;
    box-sizing: border-box;
}

.wallBtns .dcExpt::after {
    content: attr(data-btnName);
    position: relative;
    z-index: 2;
    pointer-events: none;
    width: 55%;
    margin-left: auto;
    margin-right: 10px;
}

.siteDropToggleCont i {
    font-size: 15px;
    margin-right: 5px;
}

/* Live display fixes */

.backdropCont:has(#siteDropToggle:checked) .wallList,
.backdropCont:has(#siteDropToggle:checked) .unsplashTagsCont {
    display: none;
}

.backdropCont:not(:has(#siteDropToggle:checked)) .liveLinkCont {
    display: none;
}

.liveLinkCont .dcExpt input {
    display: flex;
    align-items: center;
    justify-content: center;
}

.liveLinkCont .dcExpt input::after {
    content: '';
    width: 15px;
    height: 15px;
    border: 2px solid rgba(0, 0, 0, .75);
    color: white;
    border-radius: 500px;
    font-weight: 600;
    font-size: 11px;

    transition: .15s;
    display: flex;
    align-items: center;
    justify-content: center;

    position: absolute;
    right: 10px;
}

.liveLinkCont .dcExpt input:hover::after {
    border: 2px solid rgba(0, 0, 0, .75) !important;
}

body:has(.darkModeOn) .liveLinkCont .dcExpt input::after {
    border: 2px solid rgba(255, 255, 255, 0.75);
}

.liveLinkCont .dcExpt input:checked::after {
    content: 'âœ“';
    border: 2px solid transparent;
    background-color: rgba(0, 0, 0, .75);
    color: white;
}

.liveLinkCont .dcExpt input:checked:hover::after {
    background-color: rgba(0, 0, 0, .75) !important;
    color: white;
}

body:has(.darkModeOn) .liveLinkCont .dcExpt input:checked::after {
    border: 2px solid transparent;
    background-color: rgba(255, 255, 255, 0.75);
    color: black;
}