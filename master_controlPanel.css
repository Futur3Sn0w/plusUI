/* Global Variables */

:root {
    --section-l: rgba(255, 255, 255, .5);
    --section-input-l: rgba(0, 0, 0, 0.075);
    --section-inputBorder-l: rgba(0, 0, 0, .25);

    --section-d: rgba(0, 0, 0, 0.6);
    --section-input-d: rgba(255, 255, 255, 0.2);
    --section-inputBorder-d: rgba(0, 0, 0, .2);
}

.topChrome {
    position: absolute;
    bottom: 0;
    right: 10px;
    z-index: 9;

    overflow: hidden;
    overflow-y: scroll;
    scroll-snap-type: y mandatory;
    scroll-behavior: smooth;
    box-sizing: border-box;

    width: fit-content;
    height: calc(100% - 20px);
    /* padding-top: 12px; */

    border-radius: 18px 18px 0 0;

    display: flex;
    align-items: flex-end;
    justify-content: flex-start;
    flex-direction: column;
    gap: 10px;

    /* background-color: white; */
}

.topChrome .spacer {
    height: calc(100vh - 110px);
    width: 20px;

    scroll-snap-align: start;

    /* background-color: purple; */
}

.topChrome>* {
    flex-shrink: 0;
}

.timeDate {
    position: absolute;
    top: 10px;
    right: 10px;
    z-index: 10;

    display: flex;
    align-items: flex-start;
    justify-content: center;
    flex-direction: column;
    gap: 17px;
    box-sizing: border-box;
    pointer-events: none;

    height: fit-content;
    width: 250.5px;
    padding: 12px 17px 10px 17px;
    /* padding-bottom: 28px; */

    /* border-radius: 18px 18px 0 0; */
    /* border: none !important; */
    overflow: hidden;

    /* background-color: transparent !important; */
    /* backdrop-filter: none !important; */
    /* box-shadow: none !important; */

    transition: .2s;
    user-select: none;
}

.timeDate:active {
    transform: scale(.95);
}

.time {
    font-size: 33px;
    width: max-content;
}

.date {
    font-size: 20px;
    opacity: .7;
    width: max-content;
    transition: .2s;
}

.td {
    display: flex;
    flex-direction: column;
    justify-content: center;

    height: fit-content;
    width: min-content;
    font-family: GST-Med;
}

.greeting {
    display: flex;
    font-size: 19px;
    font-family: GST-Med;
    gap: 3px;

    opacity: .7;

    position: absolute;
    bottom: 10px;

    transition: .2s;
}

.date.hidden,
.greeting.hidden {
    opacity: 0;
}

.greeting::before {
    content: "Good";
}

.greeting::after {
    content: attr(data-username);
}

.aboutBtn {
    display: flex;

    position: absolute;
    top: 14px;
    right: 14px;
    padding: 5px 9px;
    z-index: 1000;

    font-size: 12px;
    font-family: GST-Bold;
    opacity: .5;
    border-radius: 500px;

    background-color: var(--surface-sect-l);
    user-select: none;
    cursor: pointer;

    transition: .15s;
}

.aboutBtn:active {
    transform: scale(.9);
}

.aboutBtn.darkModeOn {
    background-color: var(--surface-sect-d);
}

.expandToggle {
    position: absolute;
    bottom: 100px;
    left: 50%;
    transform: translateX(-50%);
    z-index: -10 !important;

    width: 30px;
    height: 20px;

    border-radius: 0 0 50px 50px;

    font-size: 12px;
    cursor: pointer;

    display: flex;
    align-items: center;
    justify-content: center;
    aspect-ratio: 1/1;
}

.expandToggle.expanded {
    /* bottom: -22px; */
}

.expandToggle i {
    transform: rotate(0);
}

.expandToggle.expanded i {
    transform: rotate(180deg);
    transition: transform .3s;
}

.controlPanel {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    flex-direction: column;
    /* gap: 5px; */

    position: relative;
    z-index: 1;

    height: fit-content;
    width: 250px;
    min-width: 200px;
    color: inherit;

    /* border-radius: 5px 5px 15px 15px; */

    padding: 5px 0 5px 0;
    margin-top: 85px;
    /* pointer-events: none; */
    box-sizing: border-box;

    border-top: none !important;
    scroll-snap-align: end;

    /* filter: blur(10px); */
    /* opacity: 0; */
    pointer-events: none;

    /* transform: translateY(-80%); */
    /* transform-origin: right; */

    transition: transform .3s, filter .3s, opacity .3s;
    transition-timing-function: ease;
}

.controlPanel * {
    pointer-events: none;
    opacity: 0;
}

.controlPanel.expanded * {
    opacity: 1;
    pointer-events: all;
}

.controlPanelOptGroup:first-of-type {
    border-radius: 13px 13px 7px 7px;
}

.debugCards {
    border-radius: 7px 7px 13px 13px !important;
}

.shelfOpts.collapse {
    height: 0;
    gap: 0;
    padding: 0;

    margin: 2.5px 0;
}

.shelfOpts {
    overflow: hidden;
    margin: 5px 0;
    transition: .3s;
}

.controlPanelOptGroup {
    width: calc(100% - 10px);

    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;

    background-color: var(--section-l);
    box-sizing: border-box;

    color: inherit;
    border-radius: 7px;
    padding: 35px 10px 10px 10px;
    gap: 5px;
    /* opacity: 0; */

    position: relative;
}

.controlPanel.darkModeOn .controlPanelOptGroup {
    background-color: var(--section-d);
}

.controlPanelOptGroup::before {
    content: attr(data-sect);

    position: absolute;
    top: 10px;
    left: 15px;

    font-family: GSD-Med;
    font-size: 14px;
}

.controlPanelOptGroup .ccSubHead {
    padding-left: 5px;

    font-family: GST-Med;
    font-size: 14px;

    margin-top: 5px;
}

.themeOpts .toggles {
    display: flex;
    flex-wrap: wrap;
    gap: 3px;
    width: 100%;
}

.themeOpts .toggles .dcExpt {
    width: calc(50% - 1.5px);
}

.themeOpts .toggles .floatModeCardOptGroup,
.themeOpts .toggles .floatModeCardOptGroup::before {
    border-radius: 10px 5px 5px 10px !important;
}


.themeOpts .toggles .disableParaOptGroup,
.themeOpts .toggles .disableParaOptGroup::before {
    border-radius: 5px 10px 10px 5px !important;
}


.button {
    width: 100%;
    height: 30px;
    background-color: var(--section-input-l);
    border-radius: 10px;
    cursor: pointer;

    font-size: 12px;
    color: inherit;
    box-sizing: border-box;

    position: relative;

    display: flex;
    justify-content: flex-start;
    align-items: center;

    padding: 0 10px;
    transition: .125s;
}

.button.lightDark::after {
    content: attr(data-theme);

    margin-left: 3px;
    margin-bottom: -1px;
    font-family: GST-Med;
    opacity: .7;

    text-transform: capitalize;
}

.controlPanel.darkModeOn .controlPanelOptGroup .toggles .button {
    background-color: var(--section-input-d);
}

.button .btnInner::after {
    content: attr(data-btnLabel);
    padding-left: 4px;
}

.controlPanel .keyTB-cont {
    background-color: var(--section-input-l);
    color: inherit;
    border-radius: 10px;

    box-sizing: border-box;

    position: relative;
    overflow: hidden;

    width: 100%;
    height: 30px;
    padding: 0 8px;
    border: 0;
}

.controlPanel.darkModeOn .keyTB-cont {
    background-color: var(--section-input-d);
}

.keyTB {
    width: 100%;
    height: 100%;

    border: none !important;
    outline: none !important;

    background-color: transparent;
    color: inherit;
    font-size: 12px;

    position: relative;
    z-index: 1;
}

.keyTB#userNameTextbox {
    padding-left: 10px;
}

.keyTB-cont:active::before {
    border-width: 3px;
}

.controlPanel .keyTB-cont .keyTB::placeholder {
    color: inherit;
    opacity: 0.5;
}

.backdropCont {
    display: flex;
    gap: 3px;
    width: 100%;
}

.backdropCont .dcExpt.uploadBtn {
    width: 35px;
    border-radius: 5px 10px 10px 5px;
    padding-left: 10px;
    cursor: pointer;

    display: none;
}

.backdropCont .dcExpt.uploadBtn.enabled {
    display: flex;
}

.backdropCont .dcExpt.uploadBtn::before {
    border-radius: 5px 10px 10px 5px;
}

.dcExpt.uploadBtn input {
    width: 100%;
    height: 35px !important;
    opacity: 0;

    position: absolute;
}

.backdropCont .dcExpt.keyTBOptGroup,
.backdropCont .dcExpt.keyTBOptGroup::before {
    border-radius: 10px 5px 5px 10px !important;
}

.backdropCont .dcExpt.keyTBOptGroup.solo,
.backdropCont .dcExpt.keyTBOptGroup.solo::before {
    border-radius: 10px !important;
}

.shelfAlign {
    color: inherit;
    font-size: 11px;

    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0;

    position: relative;

    width: fit-content;
    height: fit-content;

    padding: 2px 2px 0 2px;
    width: 100%;
    box-sizing: border-box;
}

.sa-opt {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 5px;
    width: 100%;
}

.sa-opt input {
    appearance: none;

    position: relative;

    width: 100%;
    height: 25px;

    margin: 0;

    display: flex;
    align-items: center;
    justify-content: center;

    box-sizing: border-box;
}

.saoL input::before {
    border-right: 1px solid transparent !important;
}

.sa-opt.saoC input::before {
    border-radius: 0;
    border-left: 1px solid transparent !important;
    border-right: 1px solid transparent !important;
}

.saoR input::before {
    border-radius: 0 10px 10px 0 !important;
    border-left: 1px solid transparent !important;
}

.sa-opt input::before {
    content: "";

    width: 100%;
    height: 100%;

    position: absolute;

    border-radius: 10px 0 0 10px;
    border: 1px solid var(--section-inputBorder-l);
    background-color: transparent;
}

.controlPanel.darkModeOn .shelfAlign .sa-opt input::before {
    border: 1px solid var(--section-input-d);
}

.sa-opt input:checked::before {
    background-color: var(--section-input-l);
}

.controlPanel.darkModeOn .shelfAlign .sa-opt input:checked::before {
    background-color: var(--section-input-d);
}

.shelfStyle {
    color: inherit;
}

.shelfStyle select {
    background-color: inherit;
    border: none;
    outline: none;
}

.exps-list {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 5px;
}

.dcExpt {
    width: 100%;
    height: 30px;
    padding-left: 7px;
    font-size: 12px;

    display: flex;
    align-items: center;
    justify-content: flex-start;

    overflow: hidden;

    background-color: var(--section-input-l);
    border-radius: 10px;

    position: relative;
    box-sizing: border-box;

    transition: .125s;
}

.dcExpt:active,
.button:active {
    transform: scale(.97) !important;
}

.dcExpt::before,
.keyTB-cont::before,
.button::before {
    content: "";
    width: calc(100% - 2px);
    height: calc(100% - 2px);

    position: absolute;
    top: 0;
    left: 0;

    border-color: rgb(0, 0, 0);
    border-width: 1px;
    border-style: solid;
    mix-blend-mode: overlay;
    opacity: .75;
    border-radius: 11px;

    transition: .1s;
    transform-origin: center;
}

.darkModeOn .dcExpt::before,
.darkModeOn .keyTB-cont::before,
.darkModeOn .button::before {
    border-color: white;
    opacity: .5;
}

.dcExpt:not(.keyTBOptGroup) input {
    appearance: none;
    position: absolute;
    left: -2px;

    width: 100%;
    height: 100%;
}

.dcExpt:not(.keyTBOptGroup) input::before,
.dcExpt:not(.keyTBOptGroup) input::after {
    content: "";
    height: 30px;
    width: 100%;

    position: absolute;
    z-index: 1;
    cursor: pointer;

    transition: .2s;
}

.dcExpt:not(.keyTBOptGroup) input::before {
    background: linear-gradient(90deg, rgb(230, 139, 139), transparent);
    left: -2px;
}

.dcExpt:not(.keyTBOptGroup) input::after {
    background: linear-gradient(90deg, transparent, rgb(107, 174, 106));
    opacity: 0;
    left: 0;
}

.dcExpt:not(.keyTBOptGroup) input:checked::before {
    opacity: 0;
}

.dcExpt input:not(.keyTBOptGroup):checked::after {
    opacity: 1;
}

.dcExpt:not(.keyTBOptGroup) label {
    position: relative;
    z-index: 2;
    pointer-events: none;
}

.controlPanel.darkModeOn .controlPanelOptGroup .dcExpt {
    background-color: var(--section-input-d);
}